<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>
		Iranian Experts
	</title>

	<style>
		body {
			background-color: #cccccc;
		}

		p {
			color: blue;
			background-color: white;
		}

		.rtl {
			direction: rtl;
			text-align: justify;
			font-size: 10pt;
			font-family: Tahoma;
		}

		.ltr {
			direction: ltr;
			text-align: left;
			font-size: 10pt;
			font-family: Verdana;
		}

		.with-border {
			margin: 10px;
			padding: 10px;
			border: thin inset;
		}
	</style>
</head>
<body>
	<div>
		<p class="rtl with-border">
			کاربر گرامی، از اينکه از سرويس های اين پايگاه، خصوصا سرويس شناسايی وضعيت ياهو مسنجر
			استفاده می کنيد، صميمانه از شما تشکر کرده و به خود می باليم. ولی قبل از هر چيز،
			توضيح نکاتی چند در رابطه با اين سرويس الزامی است:
			توجه داشته باشيد، در صورتی که شخصی، به صورت نامرئی وارد ياهو مسنجر شده باشد، تا
			اين لحظه، هيچ سرويس و يا برنامه ايی، قادر به شناسايی اينکه وی وارد ياهو منسجر شده
			است و يا خير، وجود ندارد! دقت کنيد که پايگاه و يا برنامه های جانبی که ادعا می کنند
			که در اين شرايط نيز می توانند وضعيت ياهو مسنجر شخص مورد نظر را شناسايی نماييد، صرفا
			يا تقلبی بوده و يا به صورت غير قانونی، اقدام به هک کردن رايانه و يا اکانت ياهو مسنجر
			شما می کنند.
			سرويسی که در حال حاضر تمايل به استفاده از آن را داريد، بدين شکل عمل می کند که در
			صورتی که شخص مورد نظر به صورت مرئی وارد ياهو مسنجر شده و به عنوان مثال در فهرست
			دوستانش، تنظيمات منسجر را به شکلی تغيير داده باشد که برای شما نامرئی به نظر برسد،
			شما می توانيد از طريق خدمات اين پايگاه، مطلع شويد که شخص مقابل مرئی و يا نامرئی
			است.
		</p>

		<p class="ltr with-border">
			In the early days of ASP.NET most developers didn’t write client side code. They
			just used server side UI controls and any programmatic interface state changes were
			restricted to post-back processing.
			Enter Ajax, RIA, Scriptable Services, Scriptaculous, YUI, jQuery, HTML5, etc.
			Now ASP.NET developers, no matter what ASP.NET flavor you are using (YES, including
			WebForms) need to hold some of the party IN the browser.
			To manipulate the Document Object Model (DOM) elements we need to know HOW to address
			them.
			WebForms has a built in feature that pertains to the client identity of HTML elements.
			ASP.NET used an algorithm to determine the client side naming of a server side control.
		</p>
	</div>
</body>
</html>
